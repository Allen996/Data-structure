------
Array:
Def: 1\Contiguous area of memory
     2\Consisting of equal-size elements
     3\Indexed by contiguous integers
     
Special: 1\Constant-time access
            array_add+elementsize*(i-first_index)
         2\ Times for Commong Operations:
         ________|___Add___|___Remove__|
        Beginning|   O(n)  |     O(n)  |
              End|   O(1)  |     O(1)  |
           Middle|   O(n)  |     O(n)  |
       
-----
Singly-Linked List
Node contains:
1\ Key
2\ A pointer pointing to next node
--
List basic operations:                                 Times
PushFront(key)      add an element to front             O(1)
Key TopFront()      return the front item               O(n)
PopFront()          remove the front item               O(1)
PushBack(Key)                                           O(1)/O(n)(without tail)
Key Topback()                                           O(1)/O(n) (without tail)
PopBack()                                               O(n)
Boolean Find(Key)   is key in list?                     O(n)
Erase(Key)          remove key from list                O(n)
Boolean Empty()     empty list?                         O(1)
AddBefore(Node,key) Add key before the node             O(n)
Addafter(Node,key)  Add key after the node              O(1)
 --
 ----
 Doubly_Linked Lists
 
 
 
 
          
